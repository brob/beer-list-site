---
import Welcome from '../components/Welcome.astro';
import Layout from '../layouts/Layout.astro';
import Table from '../components/Table.js';
import client from '../utils/sanityClient.mjs';


const beers = await client.fetch(`
  *[_type == "beer"] {
	_id,
	name,
	brewery->{
		_id,
	  name,
	  city,
	  state,
	  slug
	},
	abv,
	style,
	ibu,
	myScore
  }
`);
console.log(beers[0])

// Welcome to Astro! Wondering what to do next? Check out the Astro documentation at https://docs.astro.build
// Don't want to use any of this? Delete everything in this file, the `assets`, `components`, and `layouts` directories, and start fresh.
---

<Layout title="G-Rob beers">
	
	
	<table class="sortable sticky table-auto w-full">
		<thead>
			<tr class="font-bold">
				<th class="p-2 border">Name</th>
				<th class="p-2 border">Brewery</th>
				<th class="p-2 border">Style</th>
				<th class="p-2 border">City</th>
				<th class="p-2 border">State</th>
				<th class="p-2 border">ABV</th>
				<th class="p-2 border">IBU</th>
				<th class="p-2 border">My Rating</th>
			</tr>
		</thead>
		<tbody>
			{beers.map(beer => (
				<tr>
					<td class="p-2 border">{beer.name}</td>
					<td class="p-2 border"><a class="text-purple-700" href={`/brewery/${beer.brewery._id}`}>{beer.brewery.name}</a></td>
					<td class="p-2 border">{beer.style}</td>
					<td class="p-2 border">{beer.brewery.city}</td>
					<td class="p-2 border">{beer.brewery.state}</td>
					<td class="p-2 border">{beer.abv}</td>
					<td class="p-2 border">{beer.ibu}</td>
					<td class="p-2 border">{beer.myScore}</td>
				</tr>
			))}
		</tbody>
	</table>

</Layout>

<script>

import 'sortable-tablesort/dist/sortable.min.js'


</script>
